CREATE OR REPLACE TRIGGER TRIGGER1
BEFORE INSERT
ON EMPLOYEES
FOR EACH ROW
DECLARE
	TEMP VARCHAR;
BEGIN
	IF (:NEW.EMAIL != (LOWER(:NEW.LAST_NAME) || '@orcl.com')) THEN 
		:NEW.EMAIL := (LOWER(:NEW.LAST_NAME) || '.' || LOWER(:NEW.JOB_ID) || '@orcl.com');
	END IF;
	IF (:NEW.DEPARTMENT_ID IS NULL) THEN 
		TEMP := '000';
	ELSE
		TEMP := :NEW.DEPARTMENT_ID;
	END IF;
	IF (:NEW.PHONE_NUMBER != '5555' || '-' || :NEW.EMPLOYEE_ID || '-' || TEMP ) THEN
		:NEW.PHONE_NUMBER != '5555' || '-' || :NEW.EMPLOYEE_ID || '-' || TEMP )
	END IF;
	IF (:NEW.SALARY < 0) THEN
		RAISE_APPLICATION_ERROR(-20000, 'Negative Value in Salary Filed. Insertion Aborted');
	END IF;
END;
/



CREATE OR REPLACE TRIGGER TRIGGER2
AFTER INSERT OR UPDATE OR DELETE
OF SALARY
ON EMPLOYEES
FOR EACH ROW
DECLARE 
	EMPLOYEE_ID_VAR VARCHAR;
	TRIGGER_REQ VARCHAR;
	
BEGIN 
	IF (NEW.EMPLOYEE_ID IS NULL) THEN 
		EMPLOYEE_ID_VAR := :OLD.EMPLOYEE_ID;
	ELSE
		EMPLOYEE_ID_VAR := :NEW.EMPLOYEE_ID;
	END IF;

	IF (:NEW.EMPLOYEE_ID IS NULL AND :NEW.EMPLOYEE_ID IS NOT NULL) THEN 
		TRIGGER_REQ := 'DELETE';
	ELSE IF (:NEW.EMPLOYEE_ID IS NOT NULL AND :OLD.EMPLOYEE_ID IS NULL) THEN 
		TRIGGER_REQ := 'INSERT';
	ELSE
		TRIGGER_REQ := 'UPDATE';
	END IF;

	INSERT INTO SALARY_HISTORY VALUES (Salary_History_Seq.NEXTVAL, EMPLOYEE_ID_VAR, :OLD.SALARY, :NEW.SALARY, SYSDATE, TRIGGER_REQ);
END;
/
